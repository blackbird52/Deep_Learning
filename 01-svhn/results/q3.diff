diff -u baseline/model.py q3/model.py
--- baseline/model.py	2020-02-29 15:46:05.922247300 +0800
+++ q3/model.py	2020-04-10 14:03:29.295639100 +0800
@@ -8,6 +8,8 @@
 # Created By : sunpeiqin
 # =======================================
 
+import cv2
+import numpy as np
 import tensorflow as tf
 import tensorflow.contrib as tf_contrib
 from common import config
@@ -35,15 +37,26 @@
         return x
 
     def _pool_layer(self, name, inp, ksize, stride, padding='SAME', mode='MAX'):
-        assert mode in ['MAX', 'AVG'], 'the mode of pool must be MAX or AVG'
+        assert mode in ['MAX', 'AVG', 'LP'], 'the mode of pool must be MAX, AVG or LP'
         if mode == 'MAX':
             x = tf.nn.max_pool(inp, ksize=[1, ksize, ksize, 1], strides=[1, stride, stride, 1],
                                padding=padding, name=name, data_format='NHWC')
         elif mode == 'AVG':
             x = tf.nn.avg_pool(inp, ksize=[1, ksize, ksize, 1], strides=[1, stride, stride, 1],
                                padding=padding, name=name, data_format='NHWC')
+        elif mode == 'LP':
+            x = self._lp_pool(inp, ksize=ksize, strides=[1, stride, stride, 1], 
+                              padding=padding, data_format='NHWC', p=4)
         return x
 
+    def _lp_pool(self, inp, ksize, strides, padding, data_format, p):
+        gauss_kernel = np.multiply(cv2.getGaussianKernel(ksize, 0.8), np.transpose(cv2.getGaussianKernel(ksize, 0.8)))
+        gauss_kernel = tf.constant(gauss_kernel, shape=[ksize, ksize, 1, 1], dtype=tf.float32)
+        res = [tf.nn.conv2d(input=tf.expand_dims(inp_p, axis=-1), filter=gauss_kernel, strides=strides, 
+                            padding=padding, data_format=data_format) 
+                            for inp_p in tf.unstack(tf.pow(inp, p), axis=-1)]
+        return tf.pow(tf.concat(res, axis=-1) + 1e-10, 1.0/p)
+
     def _fc_layer(self, name, inp, units, dropout=0.5):
         with tf.variable_scope(name) as scope:
             shape = inp.get_shape().as_list()
@@ -74,21 +87,21 @@
         x = self._conv_layer(name='conv1', inp=data,
                              kernel_shape=[3, 3, config.nr_channel, 16], stride=1,
                              is_training=is_training) # Nx32x32x32
-        x = self._pool_layer(name='pool1', inp=x, ksize=2, stride=2, mode='MAX') # Nx16x16x16
+        x = self._pool_layer(name='pool1', inp=x, ksize=2, stride=2, mode='LP') # Nx16x16x16
 
         # conv2
         x = self._conv_layer(name='conv21', inp=x, kernel_shape=[3, 3, 16, 32],
                              stride=1, is_training=is_training)
         x = self._conv_layer(name='conv22', inp=x, kernel_shape=[3, 3, 32, 32],
                              stride=1, is_training=is_training)
-        x = self._pool_layer(name='pool2', inp=x, ksize=2, stride=2, mode='MAX') # Nx8x8x32
+        x = self._pool_layer(name='pool2', inp=x, ksize=2, stride=2, mode='LP') # Nx8x8x32
 
         # conv3
         x = self._conv_layer(name='conv31', inp=x, kernel_shape=[3, 3, 32, 64],
                              stride=1, is_training=is_training)
         x = self._conv_layer(name='conv32', inp=x, kernel_shape=[3, 3, 64, 64],
                              stride=1, is_training=is_training)
-        x = self._pool_layer(name='pool3', inp=x, ksize=2, stride=2, mode='MAX') # Nx4x4x64
+        x = self._pool_layer(name='pool3', inp=x, ksize=2, stride=2, mode='LP') # Nx4x4x64
 
         # conv4
         x = self._conv_layer(name='conv41', inp=x, kernel_shape=[3, 3, 64, 128],
